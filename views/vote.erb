<style>

html{
  width: 825px;
  height: 1200px;
  overflow-x:hidden;
}

.container{
	left: -9px;
}
</style>

  <div id="fb-root"></div>
    <script type="text/javascript">
      window.fbAsyncInit = function() {
        FB.init({
          appId      : "<%= @app['id'] %>",                     // App ID
          channelUrl : "<%= url_no_scheme('/channel.html') %>", // Channel File
          status     : true,                                    // check login status
          cookie     : true,                                    // enable cookies to allow the server to access the session
          xfbml      : true                                     // parse XFBML
        });

        // Listen to the auth.login which will be called when the user logs in
        // using the Login button
        FB.Event.subscribe('auth.login', function(response) {
          // We want to reload the page now so Ruby can read the cookie that the
          // Javascript SDK sat. But we don't want to use
          // window.location.reload() because if this is in a canvas there was a
          // post made to this page and a reload will trigger a message to the
          // user asking if they want to send data again.
          window.location = window.location;
        });

        FB.Canvas.setAutoGrow();
      };

      // Load the SDK Asynchronously
      (function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/all.js";
        fjs.parentNode.insertBefore(js, fjs);
      }(document, 'script', 'facebook-jssdk'));
    </script>

<div class="container">

<img id="image" src="assets/0150_7for7_2_04.jpg" />

<img id="image1" src="assets/0150_7for7_2_07.jpg" />

<img id="image2" src="assets/0150_7for7_2_08.jpg" />

<img id="image3" src="assets/0150_7for7_2_09.jpg" />

<img id="image4" src="assets/0150_7for7_2_12.jpg" />

<img id="image5" src="assets/0150_7for7_2_15.jpg" />




	
	<% @groups.products.each_with_index do |group,i| %>

	<form action="/vote/<%= group.id %>" method="post" id="vote<%= i + 1 %>" enctype="multipart/form-data">
			<p>
		<input type="text" id="email" name="votes[email]" value="<%= session[:email] %>" hidden />
		<input type="text" id="ip_address" name="votes[ip_address]" value="<%= request.ip %>" hidden />
		<input type="text" id="username" name="votes[username]" value="<%= session[:user_name] %>" hidden />
		<input type="submit" id="test<%= i + 1 %>"></a>
		<%# <input id="" type="image" src="assets/voteNow_idle.jpg" /> %>
	</p>
</form>

	<% end %>


</div>